- hosts:
    - kubernetes-master
    - kubernetes-node1
    - kubernetes-node2
  become: yes
  tasks:
    - name: Update and upgrade APT packages
      apt:
        update_cache: yes
        upgrade: dist
 
    - name: Disable swap
      command: swapoff -a
 
    - name: Comment out swap line in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^(\S+\s+\S+\s+swap\s+\S+\s+\S+\d+\s+\d+)'
        replace: '#\1'
 
    - name: Ensure required kernel modules are loaded at boot
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter
 
    - name: Load overlay module
      modprobe:
        name: overlay
        state: present
 
    - name: Load br_netfilter module
      modprobe:
        name: br_netfilter
        state: present
 
    - name: Set system configurations for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
 
    - name: Apply sysctl parameters
      command: sysctl --system
 
    - name: Install required APT packages
      apt:
        name:
          - curl
          - gpg
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
 
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
 
    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present
        update_cache: yes
 
    - name: Install containerd
      apt:
        name: containerd.io
        state: present
 
    - name: Generate default containerd configuration
      command: containerd config default
      register: containerd_default_config
 
    - name: Save containerd configuration to file
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_default_config.stdout }}"
 
    - name: Set SystemdCgroup to true in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
 
    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes
 
    - name: Ensure Kubernetes APT keyrings directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    - name: Download Kubernetes apt-key
      command: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key -o /tmp/kubernetes-release.key
 
    - name: Add Kubernetes apt-key
      command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-release.key
 
    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        state: present
        update_cache: yes
 
    - name: Add Kubernetes APT repository
      command: >
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
 
    - name: Install Kubernetes binaries
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
 
- hosts: kubernetes-master
  become: yes
  tasks:
    - name: Install kubectl
      apt:
        name: kubectl
        state: present
        update_cache: yes